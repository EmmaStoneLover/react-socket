{"version":3,"sources":["config/MyBox.jsx","components/Text.jsx","components/Input.jsx","components/UserBox.jsx","config/Theme.jsx","components/Settings.jsx","App.jsx","index.js"],"names":["MyBox","children","Box","sx","m","p","boxShadow","borderRadius","Text","text","setText","useState","textSettings","setTextSettings","map","payload","index","Typography","component","className","user","variant","color","message","Grid","container","style","textAlign","item","xs","Button","onClick","prev","localStorage","JSON","stringify","Input","socket","setMessage","loading","setLoading","socketRef","useRef","useEffect","current","io","connect","on","disconnect","handleSubmit","useCallback","e","preventDefault","emit","username","onSubmit","LoadingButton","type","TextField","label","value","onChange","target","required","fullWidth","UserBox","AUTH","logged","setLogged","userInput","setUserInput","passwordInput","setPasswordInput","a","data","password","console","log","fetch","method","headers","body","json","res","userError","passwordError","token","fetchData","marginLeft","marginRight","maxWidth","vlaue","ColorModeContext","createContext","toggleColorMode","COLORS","name","yellow","blue","green","red","purple","orange","Theme","mode","ModeLocalStorege","darkMode","setMode","light","ColorLocalStorage","colorLight","dark","colorDark","setColor","right","forEach","cl","ColorLocalStorageDefiner","toggleColorFunc","newColor","toggleColor","colorMode","useMemo","toggleDarkMode","toggleColorLight","toggleColorDark","theme","createTheme","palette","primary","secondary","background","default","grey","paper","Provider","ThemeProvider","Settings","FormControlLabel","control","Switch","checked","labelPlacement","i","App","parse","firstText","useTheme","useContext","settings","setSettings","bgcolor","minHeight","Container","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d53281cc.chunk.js","sourcesContent":["import Box from '@mui/material/Box'\n\nexport default function MyBox({ children }) {\n  return (\n    <Box\n      sx={{\n        m: 2,\n        p: 2,\n        boxShadow: 5,\n        borderRadius: 3,\n      }}\n    >\n      {children}\n    </Box>\n  )\n}\n","import { useState } from 'react'\nimport '../css/App.css'\n\nimport MyBox from '../config/MyBox'\nimport { Button, Grid, Typography } from '@mui/material'\n\nexport default function Text({ text, setText }) {\n  const [textSettings, setTextSettings] = useState(false)\n\n  const setTextToLocalStorage = () => {\n    localStorage.text = JSON.stringify(text)\n    setTextSettings(false)\n  }\n  const deleteText = () => {\n    setText([])\n    delete localStorage.text\n  }\n\n  return (\n    <MyBox>\n      {text.map((payload, index) => {\n        return (\n          <Typography\n            component=\"p\"\n            key={index}\n            className={`\n              textLeft\n              ${payload.user === 'Миша' ? 'textRight' : ''} \n              ${payload.user === 'Emma Stone' ? 'textCenter' : ''}\n              `}\n          >\n            {payload.user !== null &&\n            payload.user !== 'null' &&\n            payload.user ? (\n              <Typography variant=\"b\" color=\"primary\">\n                &nbsp; {payload.user} &nbsp;\n              </Typography>\n            ) : (\n              ''\n            )}\n            {payload.message}\n          </Typography>\n        )\n      })}\n      <br />\n      <br />\n      <div>\n        <Grid container style={{ textAlign: 'start' }}>\n          <Grid item xs={2}>\n            <Button onClick={() => setTextSettings((prev) => !prev)}>\n              •••\n            </Button>\n          </Grid>\n          {textSettings ? (\n            <Grid item xs={10}>\n              <Button color=\"success\" onClick={setTextToLocalStorage}>\n                Save text\n              </Button>\n              <Button color=\"error\" onClick={deleteText}>\n                Delete text\n              </Button>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n      </div>\n    </MyBox>\n  )\n}\n","import { useEffect, useState, useCallback, useRef } from 'react'\nimport { TextField, Typography } from '@mui/material'\nimport LoadingButton from '@mui/lab/LoadingButton'\nimport io from 'socket.io-client'\n\nconst Input = ({ socket, text, setText }) => {\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const socketRef = useRef()\n\n  useEffect(() => {\n    socketRef.current = io.connect(socket)\n    socketRef.current.on('message', (payload) => {\n      setText([...text, payload])\n      setLoading(false)\n    })\n    return () => socketRef.current.disconnect()\n  }, [text, setText, socket])\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault()\n      setLoading(true)\n      socketRef.current.emit('message', {\n        message: message,\n        user: localStorage.username,\n      })\n      setMessage('')\n    },\n    [message]\n  )\n\n  return (\n    <>\n      <Typography variant=\"h5\">Вставить текст</Typography>\n\n      <br />\n      <form onSubmit={handleSubmit}>\n        <LoadingButton\n          loading={loading}\n          type=\"submit\"\n          color=\"secondary\"\n          variant=\"outlined\"\n        >\n          Send\n        </LoadingButton>\n        <br />\n        <br />\n        <TextField\n          label=\"Вставить сюда\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          required\n          fullWidth\n          // disabled={loading}\n        />\n      </form>\n    </>\n  )\n}\n\nexport default Input\n","import { Button, TextField, Typography } from '@mui/material'\nimport LoadingButton from '@mui/lab/LoadingButton'\nimport { useState } from 'react'\n\nexport default function UserBox({ AUTH, logged, setLogged }) {\n  const [userInput, setUserInput] = useState('')\n  const [passwordInput, setPasswordInput] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function fetchData() {\n    const data = {\n      username: userInput,\n      password: passwordInput,\n    }\n    console.log('Отправляю:', data)\n    const res = await (\n      await fetch(`${AUTH}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify(data),\n      })\n    ).json()\n    console.log('Пришло:', res)\n    if (!res.userError && !res.passwordError && res.username) {\n      localStorage.username = res.username\n      localStorage.token = res.token\n      setLogged(true)\n      console.log('Все збс', localStorage)\n    } else {\n      setUserInput('')\n      setPasswordInput('')\n      setLogged(false)\n      setLoading(false)\n      console.log('Errreeeeeeeeooeoeoeoeooeoeoeor')\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    fetchData()\n  }\n  function handleLogOut() {\n    delete localStorage.username\n    delete localStorage.token\n    setLoading(false)\n    console.log(localStorage)\n    setLogged(false)\n    setUserInput('')\n    setPasswordInput('')\n  }\n\n  return (\n    <div>\n      {!logged ? (\n        <>\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <Typography variant=\"label\" style={{ marginRight: 25 }}>\n              Эй ю ты кто? а\n            </Typography>\n            <LoadingButton\n              loading={loading}\n              type=\"submit\"\n              color=\"secondary\"\n              variant=\"outlined\"\n            >\n              Вoйти\n            </LoadingButton>\n            <br />\n            <br />\n            <TextField\n              required\n              fullWidth\n              style={{ maxWidth: 500 }}\n              type=\"username\"\n              label=\"логин Ноунейм\"\n              vlaue={userInput}\n              onChange={(e) => setUserInput(e.target.value)}\n            />\n            <br />\n            <br />\n            <TextField\n              required\n              fullWidth\n              style={{ maxWidth: 500 }}\n              type=\"password\"\n              label=\"пароль 1234\"\n              value={passwordInput}\n              onChange={(e) => setPasswordInput(e.target.value)}\n            />\n          </form>\n        </>\n      ) : (\n        <>\n          <Typography variant=\"label\">\n            {localStorage.username} &nbsp; &nbsp;\n          </Typography>\n          <Button\n            style={{ marginLeft: 10 }}\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={handleLogOut}\n          >\n            Выйти\n          </Button>\n        </>\n      )}\n    </div>\n  )\n}\n","import { useMemo, useState, createContext, useCallback } from 'react'\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\nimport {\n  grey,\n  yellow,\n  blue,\n  green,\n  red,\n  purple,\n  orange,\n} from '@mui/material/colors'\n\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} })\nexport const COLORS = [\n  { name: 'yellow', color: yellow },\n  { name: 'blue', color: blue },\n  { name: 'green', color: green },\n  { name: 'red', color: red },\n  { name: 'purple', color: purple },\n  { name: 'orange', color: orange },\n]\n\nexport default function Theme({ children }) {\n  const [mode, setMode] = useState(\n    ModeLocalStorege(localStorage.darkMode) || 'light'\n  )\n  const [color, setColor] = useState({\n    light: ColorLocalStorage(localStorage.colorLight) || blue,\n    dark: ColorLocalStorage(localStorage.colorDark) || green,\n  })\n\n  function ModeLocalStorege(mode) {\n    if (mode === 'light') return 'light'\n    else if (mode === 'dark') return 'dark'\n    else return\n  }\n  function ColorLocalStorage(color) {\n    let right = null\n    COLORS.forEach((cl) => {\n      if (color === cl.name) right = cl.color\n    })\n    return right\n  }\n  const ColorLocalStorageDefiner = useCallback((color) => {\n    let right = null\n    COLORS.forEach((cl) => {\n      if (color === cl.color) right = cl.name\n    })\n    return right\n  }, [])\n  const toggleColorFunc = useCallback(\n    (mode, newColor) => {\n      if (mode === 'light') {\n        setColor((prev) => {\n          localStorage.colorLight = ColorLocalStorageDefiner(newColor)\n          return { light: newColor, dark: prev.dark }\n        })\n      } else {\n        setColor((prev) => {\n          localStorage.colorDark = ColorLocalStorageDefiner(newColor)\n          return { light: prev.light, dark: newColor }\n        })\n      }\n    },\n    [ColorLocalStorageDefiner]\n  )\n  const toggleColor = useCallback(\n    (mode) => {\n      let right = {}\n      COLORS.forEach((cl) => {\n        right[cl.name] = () =>\n          toggleColorFunc(mode === 'light' ? 'light' : 'dark', cl.color)\n      })\n      return right\n    },\n    [toggleColorFunc]\n  )\n  const colorMode = useMemo(\n    () => ({\n      toggleDarkMode: () => {\n        setMode((prev) => {\n          if (prev === 'light') {\n            prev = 'dark'\n          } else {\n            prev = 'light'\n          }\n          localStorage.darkMode = prev\n          return prev\n        })\n      },\n      toggleColorLight: toggleColor('light'),\n      toggleColorDark: toggleColor('dark'),\n    }),\n    [toggleColor]\n  )\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === 'light'\n            ? {\n                // light\n                primary: color.light,\n                secondary: color.light,\n              }\n            : {\n                // dark\n                primary: color.dark,\n                secondary: color.dark,\n                background: {\n                  default: grey[800],\n                  paper: grey[900],\n                },\n              }),\n        },\n      }),\n    [mode, color]\n  )\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ColorModeContext.Provider>\n  )\n}\n","import { Button, FormControlLabel, Switch } from '@mui/material'\nimport { COLORS } from '../config/Theme'\nimport MyBox from '../config/MyBox'\n\nexport default function Settings({ theme, colorMode }) {\n  return (\n    <MyBox>\n      <FormControlLabel\n        control={\n          <Switch\n            onClick={colorMode.toggleDarkMode}\n            checked={theme.palette.mode === 'light' ? false : true}\n          />\n        }\n        label=\"Dark Mode\"\n        labelPlacement=\"start\"\n      />\n      <br />\n      {theme.palette.mode === 'light' ? (\n        <div>\n          {COLORS.map((cl, i) => {\n            return (\n              <Button onClick={colorMode.toggleColorLight[cl.name]} key={i}>\n                {cl.name}\n              </Button>\n            )\n          })}\n        </div>\n      ) : (\n        <div>\n          {COLORS.map((cl, i) => {\n            return (\n              <Button onClick={colorMode.toggleColorDark[cl.name]} key={i}>\n                {cl.name}\n              </Button>\n            )\n          })}\n        </div>\n      )}\n    </MyBox>\n  )\n}\n","import { useState, useContext } from 'react'\nimport { Container, Typography, Box, Button } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\n// import './css/App.css'\n\nimport Text from './components/Text'\nimport Input from './components/Input'\nimport MyBox from './config/MyBox'\nimport UserBox from './components/UserBox'\nimport Settings from './components/Settings'\nimport { ColorModeContext } from './config/Theme'\n\nconst AUTH = 'https://emmastonenodejs.herokuapp.com'\nconst socket = 'https://node7socket.herokuapp.com'\n\nexport default function App() {\n  const firstText = () => {\n    try {\n      return JSON.parse(localStorage.text)\n    } catch {\n      return []\n    }\n  }\n  const [text, setText] = useState(firstText() || [])\n  const [logged, setLogged] = useState(() => {\n    return localStorage.username &&\n      localStorage.username !== null &&\n      localStorage.username !== 'null'\n      ? true\n      : false\n  })\n\n  const theme = useTheme()\n  const colorMode = useContext(ColorModeContext)\n  const [settings, setSettings] = useState(false)\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        minHeight: '100vh',\n      }}\n    >\n      <Container className=\"App\" maxWidth=\"sm\">\n        <br />\n        <br />\n        <Typography variant=\"h4\">Emma Stone</Typography>\n        <br />\n        <Button onClick={() => setSettings((prev) => !prev)}>Settings</Button>\n        {settings ? <Settings theme={theme} colorMode={colorMode} /> : ''}\n        <MyBox>\n          <UserBox\n            AUTH={AUTH}\n            logged={logged}\n            setLogged={setLogged}\n            text={text}\n            setText={setText}\n          />\n        </MyBox>\n        {text.length ? (\n          <Text text={text} setText={setText} />\n        ) : (\n          <div>\n            <Typography variant=\"p\">Ничего тут нету</Typography>\n            <br />\n          </div>\n        )}\n        <MyBox>\n          <Input socket={socket} text={text} setText={setText} />\n        </MyBox>\n      </Container>\n      <br />\n    </Box>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\n\nimport App from './App.jsx'\nimport Theme from './config/Theme'\n\nReactDOM.render(\n  <Theme>\n    <App />\n  </Theme>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}