{"version":3,"sources":["settings/MyBox.jsx","components/Text.jsx","components/Input.jsx","components/UserBox.jsx","settings/Settings.jsx","settings/Theme.jsx","App.jsx","index.js"],"names":["MyBox","children","Box","sx","m","p","boxShadow","borderRadius","styles","fontSize","margin","Text","text","map","payload","index","style","className","user","message","socket","io","Input","setMessage","setText","useState","loading","setLoading","useEffect","on","Typography","variant","onSubmit","e","preventDefault","emit","localStorage","username","LoadingButton","type","color","TextField","label","value","onChange","target","required","disabled","UserBox","AUTH","logged","setLogged","userInput","setUserInput","passwordInput","setPasswordInput","a","data","password","console","log","fetch","method","headers","body","JSON","stringify","json","res","userError","passwordError","token","handleSubmit","fetchData","Button","marginLeft","onClick","marginRight","fullWidth","maxWidth","vlaue","Settings","theme","colorMode","FormControlLabel","control","Switch","toggleDarkMode","checked","palette","mode","labelPlacement","toggleColorLight","Yellow","Blue","Green","Red","toggleColorDark","ColorModeContext","createContext","toggleColorMode","Theme","ModeLocalStorege","darkMode","setMode","light","ColorLocalStorage","colorLight","blue","dark","colorDark","green","setColor","yellow","red","ColorLocalStorageDefiner","toggleColorFunc","useCallback","newColor","prev","useMemo","createTheme","primary","secondary","background","default","grey","paper","Provider","ThemeProvider","App","useTheme","useContext","settings","setSettings","bgcolor","minHeight","Container","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c6d2d7b.chunk.js","sourcesContent":["import Box from '@mui/material/Box'\n\nexport default function MyBox({ children }) {\n  return (\n    <Box\n      sx={{\n        m: 2,\n        p: 2,\n        boxShadow: 5,\n        borderRadius: 5,\n        // maxWidth: 500,\n      }}\n    >\n      {children}\n    </Box>\n  )\n}\n","import React from 'react'\nimport MyBox from '../settings/MyBox'\nimport '../css/App.css'\n\nconst styles = {\n  p: {\n    fontSize: '15px',\n    margin: '1px',\n  },\n}\n\nexport default function Text({ text }) {\n  return (\n    <MyBox>\n      {text.map((payload, index) => {\n        return (\n          <p\n            style={styles.p}\n            className={`\n              textLeft\n              ${payload.user === 'Миша' ? 'textRight' : ''} \n              ${payload.user === 'Emma Stone' ? 'textCenter' : ''}\n              `}\n            key={index}\n          >\n            {payload.user !== null && payload.user !== 'null' ? (\n              <b>{payload.user} &nbsp;</b>\n            ) : (\n              <b>Левак &nbsp;</b>\n            )}\n            {payload.message}\n          </p>\n        )\n      })}\n    </MyBox>\n  )\n}\n","import { TextField, Typography } from '@mui/material'\nimport { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport LoadingButton from '@mui/lab/LoadingButton'\n\nconst socket = io('https://node7socket.herokuapp.com')\n\nexport default function Input({ message, setMessage, text, setText }) {\n  const [loading, setLoading] = useState(false)\n  function handleSubmit(e) {\n    setLoading(true)\n    e.preventDefault()\n    socket.emit('message', { message: message, user: localStorage.username })\n    setMessage('')\n  }\n  useEffect(() => {\n    socket.on('message', (payload) => {\n      setText([...text, payload])\n      setLoading(false)\n    })\n  })\n\n  return (\n    <>\n      <Typography variant=\"h5\">Вставсь сюда свой большой текст</Typography>\n\n      <br />\n      <form onSubmit={handleSubmit}>\n        <LoadingButton\n          loading={loading}\n          type=\"submit\"\n          color=\"secondary\"\n          variant=\"outlined\"\n        >\n          Send\n        </LoadingButton>\n        <br />\n        <br />\n        <TextField\n          label=\"жопа\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          required\n          disabled={loading}\n        />\n      </form>\n    </>\n  )\n}\n","import { Button, TextField, Typography } from '@mui/material'\nimport { useState } from 'react'\nimport LoadingButton from '@mui/lab/LoadingButton'\n\nexport default function UserBox({ AUTH, logged, setLogged }) {\n  const [userInput, setUserInput] = useState('')\n  const [passwordInput, setPasswordInput] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function fetchData() {\n    const data = {\n      username: userInput,\n      password: passwordInput,\n    }\n    console.log('Отправляю:', data)\n    const res = await (\n      await fetch(`${AUTH}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify(data),\n      })\n    ).json()\n    console.log('Пришло:', res)\n    if (!res.userError && !res.passwordError && res.username) {\n      localStorage.username = res.username\n      localStorage.token = res.token\n      setLogged(true)\n      console.log('Все збс', localStorage)\n    } else {\n      setUserInput('')\n      setPasswordInput('')\n      setLogged(false)\n      setLoading(false)\n      console.log('Errreeeeeeeeooeoeoeoeooeoeoeor')\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    fetchData()\n  }\n  function handleLogOut() {\n    delete localStorage.username\n    delete localStorage.token\n    setLoading(false)\n    console.log(localStorage)\n    setLogged(false)\n    setUserInput('')\n    setPasswordInput('')\n  }\n\n  return (\n    <div>\n      {!logged ? (\n        <>\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <Typography variant=\"label\" style={{ marginRight: 25 }}>\n              Эй ю ты кто? а\n            </Typography>\n            <LoadingButton\n              loading={loading}\n              type=\"submit\"\n              color=\"secondary\"\n              variant=\"outlined\"\n            >\n              Вoйти\n            </LoadingButton>\n            <br />\n            <br />\n            <TextField\n              required\n              fullWidth\n              style={{ maxWidth: 500 }}\n              type=\"username\"\n              label=\"логин Ноунейм\"\n              vlaue={userInput}\n              onChange={(e) => setUserInput(e.target.value)}\n            />\n            <br />\n            <br />\n            <TextField\n              required\n              fullWidth\n              style={{ maxWidth: 500 }}\n              type=\"password\"\n              label=\"пароль 1234\"\n              value={passwordInput}\n              onChange={(e) => setPasswordInput(e.target.value)}\n            />\n          </form>\n        </>\n      ) : (\n        <>\n          <Typography variant=\"label\">\n            Привет, {localStorage.username}\n          </Typography>\n          <Button\n            style={{ marginLeft: 10 }}\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={handleLogOut}\n          >\n            Выйти\n          </Button>\n        </>\n      )}\n    </div>\n  )\n}\n","import { Button, FormControlLabel, Switch } from '@mui/material'\nimport MyBox from './MyBox'\n\nexport default function Settings({ theme, colorMode }) {\n  return (\n    <MyBox>\n      <FormControlLabel\n        control={\n          <Switch\n            onClick={colorMode.toggleDarkMode}\n            checked={theme.palette.mode === 'light' ? false : true}\n          />\n        }\n        label=\"Dark Mode\"\n        labelPlacement=\"start\"\n      />\n      <br />\n      {theme.palette.mode === 'light' ? (\n        <div>\n          <Button onClick={colorMode.toggleColorLight.Yellow}>Yellow</Button>\n          <Button onClick={colorMode.toggleColorLight.Blue}>Blue</Button>\n          <Button onClick={colorMode.toggleColorLight.Green}>Green</Button>\n          <Button onClick={colorMode.toggleColorLight.Red}>Red</Button>\n        </div>\n      ) : (\n        <div>\n          <Button onClick={colorMode.toggleColorDark.Yellow}>Yellow</Button>\n          <Button onClick={colorMode.toggleColorDark.Blue}>Blue</Button>\n          <Button onClick={colorMode.toggleColorDark.Green}>Green</Button>\n          <Button onClick={colorMode.toggleColorDark.Red}>Red</Button>\n        </div>\n      )}\n    </MyBox>\n  )\n}\n","import { useMemo, useState, createContext, useCallback } from 'react'\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\nimport { green, blue, grey, yellow, red } from '@mui/material/colors'\n\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} })\n\nexport default function Theme({ children }) {\n  const [mode, setMode] = useState(\n    ModeLocalStorege(localStorage.darkMode) || 'light'\n  )\n  const [color, setColor] = useState({\n    light: ColorLocalStorage(localStorage.colorLight) || blue,\n    dark: ColorLocalStorage(localStorage.colorDark) || green,\n  })\n\n  function ModeLocalStorege(mode) {\n    if (mode === 'light') return 'light'\n    else if (mode === 'dark') return 'dark'\n    else return\n  }\n  function ColorLocalStorage(color) {\n    if (color === 'yellow') return yellow\n    else if (color === 'blue') return blue\n    else if (color === 'green') return green\n    else if (color === 'red') return red\n    else return\n  }\n  function ColorLocalStorageDefiner(color) {\n    if (color === yellow) return 'yellow'\n    else if (color === blue) return 'blue'\n    else if (color === green) return 'green'\n    else if (color === red) return 'red'\n    else return\n  }\n  const toggleColorFunc = useCallback((mode, newColor) => {\n    if (mode === 'light') {\n      setColor((prev) => {\n        localStorage.colorLight = ColorLocalStorageDefiner(newColor)\n        return { light: newColor, dark: prev.dark }\n      })\n    } else {\n      setColor((prev) => {\n        localStorage.colorDark = ColorLocalStorageDefiner(newColor)\n        return { light: prev.light, dark: newColor }\n      })\n    }\n  }, [])\n\n  const colorMode = useMemo(\n    () => ({\n      toggleDarkMode: () => {\n        setMode((prev) => {\n          if (prev === 'light') {\n            prev = 'dark'\n          } else {\n            prev = 'light'\n          }\n          localStorage.darkMode = prev\n          return prev\n        })\n      },\n      toggleColorLight: {\n        Yellow: () => toggleColorFunc('light', yellow),\n        Blue: () => toggleColorFunc('light', blue),\n        Green: () => toggleColorFunc('light', green),\n        Red: () => toggleColorFunc('light', red),\n      },\n      toggleColorDark: {\n        Yellow: () => toggleColorFunc('dark', yellow),\n        Blue: () => toggleColorFunc('dark', blue),\n        Green: () => toggleColorFunc('dark', green),\n        Red: () => toggleColorFunc('dark', red),\n      },\n    }),\n    [toggleColorFunc]\n  )\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === 'light'\n            ? {\n                // light\n                primary: color.light,\n                secondary: color.light,\n              }\n            : {\n                // dark\n                primary: color.dark,\n                secondary: color.dark,\n                background: {\n                  default: grey[800],\n                  paper: grey[900],\n                },\n              }),\n        },\n      }),\n    [mode, color]\n  )\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ColorModeContext.Provider>\n  )\n}\n","import { useState, useContext } from 'react'\nimport './css/App.css'\nimport Text from './components/Text'\nimport Input from './components/Input'\nimport MyBox from './settings/MyBox'\nimport UserBox from './components/UserBox'\nimport Settings from './settings/Settings'\nimport { Container, Typography, Box, Button } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\nimport { ColorModeContext } from './settings/Theme'\n\nconst AUTH = 'https://emmastonenodejs.herokuapp.com'\n\nexport default function App() {\n  const [message, setMessage] = useState('')\n  const [text, setText] = useState([])\n  const [logged, setLogged] = useState(() => {\n    return localStorage.username &&\n      localStorage.username !== null &&\n      localStorage.username !== 'null'\n      ? true\n      : false\n  })\n\n  const theme = useTheme()\n  const colorMode = useContext(ColorModeContext)\n  const [settings, setSettings] = useState(false)\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        minHeight: '100vh',\n      }}\n    >\n      <Container className=\"App\" maxWidth=\"sm\">\n        <br />\n        <Typography variant=\"h4\">EmmaStone</Typography>\n        <br />\n        <Button onClick={() => setSettings((prev) => !prev)}>Settings</Button>\n        {settings ? <Settings theme={theme} colorMode={colorMode} /> : ''}\n        <MyBox>\n          <UserBox\n            AUTH={AUTH}\n            logged={logged}\n            setLogged={setLogged}\n            text={text}\n            setText={setText}\n          />\n        </MyBox>\n        <MyBox>\n          <Input\n            message={message}\n            setMessage={setMessage}\n            text={text}\n            setText={setText}\n          />\n        </MyBox>\n        {text.length ? (\n          <Text text={text} />\n        ) : (\n          <Typography variant=\"p\">Ничего тут нету</Typography>\n        )}\n      </Container>\n      <br />\n    </Box>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './App.jsx'\n\nimport Theme from './settings/Theme'\n\nReactDOM.render(\n  <Theme>\n    <App />\n  </Theme>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}