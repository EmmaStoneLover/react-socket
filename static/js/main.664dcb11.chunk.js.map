{"version":3,"sources":["config/MyBox.jsx","config/MyButton.jsx","components/Text.jsx","config/Theme.jsx","config/MyLoadingButton.jsx","config/config.js","components/Input.jsx","components/UserBox.jsx","components/Settings.jsx","App.jsx","index.js"],"names":["MyBox","propps","Box","sx","m","p","boxShadow","borderRadius","bgcolor","children","MyButton","Button","style","textTransform","Text","text","setText","useState","textSettings","setTextSettings","map","payload","index","Typography","component","className","user","color","message","Grid","container","textAlign","item","xs","onClick","prev","localStorage","JSON","stringify","ColorModeContext","createContext","toggleColorMode","COLORS","name","yellow","Name","blue","green","red","purple","orange","Theme","mode","ModeLocalStorege","darkMode","setMode","light","ColorLocalStorage","colorLight","dark","colorDark","setColor","right","forEach","cl","ColorLocalStorageDefiner","useCallback","toggleColorFunc","newColor","toggleColor","colorMode","useMemo","toggleDarkMode","toggleColorLight","toggleColorDark","theme","createTheme","palette","primary","secondary","background","default","grey","myBox","Provider","value","ThemeProvider","MyLoadingButton","LoadingButton","config","AUTH","socket","Input","end","setMessage","loading","setLoading","socketRef","useRef","useEffect","current","io","connect","on","scrollIntoView","behavior","disconnect","handleSubmit","e","preventDefault","emit","username","onSubmit","TextField","required","label","variant","fullWidth","onChange","target","mt","type","UserBox","logged","setLogged","userInput","setUserInput","passwordInput","setPasswordInput","a","data","password","console","log","fetch","method","headers","body","json","res","userError","passwordError","token","fetchData","marginLeft","marginRight","maxWidth","vlaue","Settings","FormControlLabel","control","Switch","checked","labelPlacement","i","App","parse","firstText","useTheme","useContext","minHeight","Container","length","ref","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.664dcb11.chunk.js","sourcesContent":["import Box from '@mui/material/Box'\n\nexport default function MyBox(propps) {\n  return (\n    <Box\n      {...propps}\n      sx={{\n        m: 2,\n        p: 2,\n        boxShadow: 5,\n        borderRadius: 3,\n        bgcolor: 'background.myBox',\n      }}\n    >\n      {propps.children}\n    </Box>\n  )\n}\n","import Button from '@mui/material/Button'\n\nexport default function MyButton(propps) {\n  return (\n    <Button {...propps} style={{ textTransform: 'none' }}>\n      {propps.children}\n    </Button>\n  )\n}\n","import { useState } from 'react'\nimport '../css/App.css'\n\nimport MyBox from '../config/MyBox'\nimport { Grid, Typography } from '@mui/material'\n\nimport MyButton from '../config/MyButton'\n\nexport default function Text({ text, setText }) {\n  const [textSettings, setTextSettings] = useState(false)\n\n  const setTextToLocalStorage = () => {\n    localStorage.text = JSON.stringify(text)\n    setTextSettings(false)\n  }\n  const deleteText = () => {\n    setText([])\n    delete localStorage.text\n  }\n\n  return (\n    <MyBox>\n      {text.map((payload, index) => {\n        return (\n          <Typography\n            component=\"p\"\n            key={index}\n            className={`\n              textLeft\n              ${payload.user === 'Миша' ? 'textRight' : ''} \n              ${payload.user === 'Emma Stone' ? 'textCenter' : ''}\n              `}\n          >\n            {payload.user !== null &&\n            payload.user !== 'null' &&\n            payload.user ? (\n              <Typography component=\"b\" color=\"primary\">\n                &nbsp; {payload.user} &nbsp;\n              </Typography>\n            ) : (\n              ''\n            )}\n            {payload.message}\n          </Typography>\n        )\n      })}\n      <br />\n      <div>\n        <Grid container sx={{ textAlign: 'start' }}>\n          <Grid item xs={2}>\n            <MyButton onClick={() => setTextSettings((prev) => !prev)}>\n              •••\n            </MyButton>\n          </Grid>\n          {textSettings ? (\n            <Grid item xs={10}>\n              &nbsp; &nbsp;\n              <MyButton color=\"success\" onClick={setTextToLocalStorage}>\n                Save text\n              </MyButton>\n              <MyButton color=\"error\" onClick={deleteText}>\n                Delete text\n              </MyButton>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n      </div>\n    </MyBox>\n  )\n}\n","import { useMemo, useState, createContext, useCallback } from 'react'\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\nimport {\n  grey,\n  yellow,\n  blue,\n  green,\n  red,\n  purple,\n  orange,\n} from '@mui/material/colors'\n\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} })\nexport const COLORS = [\n  { name: 'yellow', color: yellow, Name: 'Yellow' },\n  { name: 'blue', color: blue, Name: 'Blue' },\n  { name: 'green', color: green, Name: 'Green' },\n  { name: 'red', color: red, Name: 'Red' },\n  { name: 'purple', color: purple, Name: 'Purple' },\n  { name: 'orange', color: orange, Name: 'Orange' },\n]\n\nexport default function Theme({ children }) {\n  const [mode, setMode] = useState(\n    ModeLocalStorege(localStorage.darkMode) || 'light'\n  )\n  const [color, setColor] = useState({\n    light: ColorLocalStorage(localStorage.colorLight) || blue,\n    dark: ColorLocalStorage(localStorage.colorDark) || green,\n  })\n\n  function ModeLocalStorege(mode) {\n    if (mode === 'light') return 'light'\n    else if (mode === 'dark') return 'dark'\n    else return\n  }\n  function ColorLocalStorage(color) {\n    let right = null\n    COLORS.forEach((cl) => {\n      if (color === cl.name) right = cl.color\n    })\n    return right\n  }\n  const ColorLocalStorageDefiner = useCallback((color) => {\n    let right = null\n    COLORS.forEach((cl) => {\n      if (color === cl.color) right = cl.name\n    })\n    return right\n  }, [])\n  const toggleColorFunc = useCallback(\n    (mode, newColor) => {\n      if (mode === 'light') {\n        setColor((prev) => {\n          localStorage.colorLight = ColorLocalStorageDefiner(newColor)\n          return { light: newColor, dark: prev.dark }\n        })\n      } else {\n        setColor((prev) => {\n          localStorage.colorDark = ColorLocalStorageDefiner(newColor)\n          return { light: prev.light, dark: newColor }\n        })\n      }\n    },\n    [ColorLocalStorageDefiner]\n  )\n  const toggleColor = useCallback(\n    (mode) => {\n      let right = {}\n      COLORS.forEach((cl) => {\n        right[cl.name] = () =>\n          toggleColorFunc(mode === 'light' ? 'light' : 'dark', cl.color)\n      })\n      return right\n    },\n    [toggleColorFunc]\n  )\n  const colorMode = useMemo(\n    () => ({\n      toggleDarkMode: () => {\n        setMode((prev) => {\n          if (prev === 'light') {\n            prev = 'dark'\n          } else {\n            prev = 'light'\n          }\n          localStorage.darkMode = prev\n          return prev\n        })\n      },\n      toggleColorLight: toggleColor('light'),\n      toggleColorDark: toggleColor('dark'),\n    }),\n    [toggleColor]\n  )\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === 'light'\n            ? {\n                // light\n                primary: color.light,\n                secondary: color.light,\n                background: {\n                  default: grey[100],\n                  myBox: 'white',\n                },\n              }\n            : {\n                // dark\n                primary: color.dark,\n                secondary: color.dark,\n                background: {\n                  default: grey[900],\n                  myBox: 'rgb(255, 255, 255, 0.05)',\n                },\n              }),\n        },\n      }),\n    [mode, color]\n  )\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ColorModeContext.Provider>\n  )\n}\n","import LoadingButton from '@mui/lab/LoadingButton'\n\nexport default function MyLoadingButton(propps) {\n  return (\n    <LoadingButton {...propps} style={{ textTransform: 'none' }}>\n      {propps.children}\n    </LoadingButton>\n  )\n}\n","import Theme from './Theme'\nimport MyBox from './MyBox'\nimport MyButton from './MyButton'\nimport MyLoadingButton from './MyLoadingButton'\n\nconst config = {\n  AUTH: 'https://emmastonenodejs.herokuapp.com',\n  socket: 'https://node7socket.herokuapp.com',\n}\n\nexport { Theme, MyBox, MyButton, MyLoadingButton }\n\nexport default config\n","import { useEffect, useState, useCallback, useRef } from 'react'\nimport { Grid, TextField } from '@mui/material'\nimport io from 'socket.io-client'\n\nimport config, { MyLoadingButton } from '../config/config'\n\nconst Input = ({ text, setText, end }) => {\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const socketRef = useRef()\n\n  useEffect(() => {\n    socketRef.current = io.connect(config.socket)\n    socketRef.current.on('message', (payload) => {\n      setText([...text, payload])\n      setLoading(false)\n    })\n    end.current.scrollIntoView({ behavior: 'smooth' })\n    return () => socketRef.current.disconnect()\n  }, [text, setText, end])\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault()\n      setLoading(true)\n      socketRef.current.emit('message', {\n        message: message,\n        user: localStorage.username,\n      })\n      setMessage('')\n    },\n    [message]\n  )\n\n  return (\n    <>\n      {/* <Typography variant=\"h5\">Вставить текст</Typography>\n      <br /> */}\n      <form onSubmit={handleSubmit}>\n        <Grid container sx={{ p: 1 }}>\n          <Grid item xs={10}>\n            <TextField\n              required\n              label=\"Вставить сюда\"\n              variant=\"outlined\"\n              value={message}\n              fullWidth\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={2} sx={{ mt: '11px', textAlign: 'end' }}>\n            <MyLoadingButton\n              loading={loading}\n              type=\"submit\"\n              color=\"secondary\"\n              // variant=\"outlined\"\n            >\n              Send\n            </MyLoadingButton>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  )\n}\n\nexport default Input\n","import { TextField, Typography } from '@mui/material'\nimport { useState } from 'react'\n\nimport config, { MyButton, MyLoadingButton } from '../config/config'\n\nexport default function UserBox({ logged, setLogged }) {\n  const [userInput, setUserInput] = useState('')\n  const [passwordInput, setPasswordInput] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function fetchData() {\n    const data = {\n      username: userInput,\n      password: passwordInput,\n    }\n    console.log('Отправляю:', data)\n    const res = await (\n      await fetch(`${config.AUTH}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify(data),\n      })\n    ).json()\n    console.log('Пришло:', res)\n    if (!res.userError && !res.passwordError && res.username) {\n      localStorage.username = res.username\n      localStorage.token = res.token\n      setLogged(true)\n      console.log('Все збс', localStorage)\n    } else {\n      setUserInput('')\n      setPasswordInput('')\n      setLogged(false)\n      setLoading(false)\n      console.log('Errreeeeeeeeooeoeoeoeooeoeoeor')\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    fetchData()\n  }\n  function handleLogOut() {\n    delete localStorage.username\n    delete localStorage.token\n    setLoading(false)\n    console.log(localStorage)\n    setLogged(false)\n    setUserInput('')\n    setPasswordInput('')\n  }\n\n  return (\n    <div>\n      {!logged ? (\n        <>\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <Typography variant=\"label\" style={{ marginRight: 25 }}>\n              Эй ю ты кто? а\n            </Typography>\n            <MyLoadingButton\n              loading={loading}\n              type=\"submit\"\n              color=\"secondary\"\n              variant=\"outlined\"\n            >\n              Вoйти\n            </MyLoadingButton>\n            <br />\n            <br />\n            <TextField\n              required\n              fullWidth\n              style={{ maxWidth: 500 }}\n              type=\"username\"\n              label=\"логин Ноунейм\"\n              vlaue={userInput}\n              onChange={(e) => setUserInput(e.target.value)}\n            />\n            <br />\n            <br />\n            <TextField\n              required\n              fullWidth\n              style={{ maxWidth: 500 }}\n              type=\"password\"\n              label=\"пароль 1234\"\n              value={passwordInput}\n              onChange={(e) => setPasswordInput(e.target.value)}\n            />\n          </form>\n        </>\n      ) : (\n        <>\n          <Typography variant=\"label\">\n            {localStorage.username} &nbsp; &nbsp;\n          </Typography>\n          <MyButton\n            style={{ marginLeft: 10 }}\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={handleLogOut}\n          >\n            Выйти\n          </MyButton>\n        </>\n      )}\n    </div>\n  )\n}\n","import { FormControlLabel, Switch } from '@mui/material'\nimport { COLORS } from '../config/Theme'\nimport MyBox from '../config/MyBox'\nimport '../css/App.css'\n\nimport DarkModeIcon from '@mui/icons-material/DarkMode'\nimport MyButton from '../config/MyButton'\n\nexport default function Settings({ theme, colorMode }) {\n  return (\n    <MyBox>\n      <FormControlLabel\n        control={\n          <Switch\n            onClick={colorMode.toggleDarkMode}\n            checked={theme.palette.mode === 'light' ? false : true}\n          />\n        }\n        label={<DarkModeIcon sx={{ mt: '7px' }} />}\n        labelPlacement=\"start\"\n      />\n      <br />\n      {COLORS.map((cl, i) => {\n        return (\n          <MyButton\n            onClick={\n              theme.palette.mode === 'light'\n                ? colorMode.toggleColorLight[cl.name]\n                : colorMode.toggleColorDark[cl.name]\n            }\n            key={i}\n          >\n            {cl.Name}\n          </MyButton>\n        )\n      })}\n    </MyBox>\n  )\n}\n","import { useState, useContext } from 'react'\nimport { Container, Typography, Box } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\n\nimport Text from './components/Text'\nimport Input from './components/Input'\nimport UserBox from './components/UserBox'\nimport Settings from './components/Settings'\nimport { ColorModeContext } from './config/Theme'\n\nimport { MyBox } from './config/config'\n\nexport default function App() {\n  const firstText = () => {\n    try {\n      return JSON.parse(localStorage.text)\n    } catch {\n      return []\n    }\n  }\n  const [text, setText] = useState(firstText() || [])\n  const [logged, setLogged] = useState(() => {\n    return localStorage.username &&\n      localStorage.username !== null &&\n      localStorage.username !== 'null'\n      ? true\n      : false\n  })\n\n  const theme = useTheme()\n  const colorMode = useContext(ColorModeContext)\n\n  const end = {}\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        minHeight: '100vh',\n      }}\n    >\n      <Container className=\"App\" maxWidth=\"sm\">\n        <br />\n        <br />\n        <Typography variant=\"h4\">Emma Stone</Typography>\n        <br />\n        <Settings theme={theme} colorMode={colorMode} />\n        <MyBox>\n          <UserBox\n            logged={logged}\n            setLogged={setLogged}\n            text={text}\n            setText={setText}\n          />\n        </MyBox>\n        {text.length ? (\n          <Text text={text} setText={setText} />\n        ) : (\n          <div>\n            <Typography variant=\"p\">Ничего тут нету</Typography>\n            <br />\n          </div>\n        )}\n        <MyBox>\n          <Input text={text} setText={setText} end={end} />\n        </MyBox>\n      </Container>\n      <br ref={end} />\n    </Box>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\n\nimport App from './App.jsx'\nimport Theme from './config/Theme'\n\nReactDOM.render(\n  <Theme>\n    <App />\n  </Theme>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}