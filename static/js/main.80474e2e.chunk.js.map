{"version":3,"sources":["config/Theme.jsx","config/MyBox.jsx","config/MyButton.jsx","config/MyLoadingButton.jsx","config/MyToggleButton.jsx","config/config.js","components/Text.jsx","components/Input.jsx","components/UserBox.jsx","components/Settings.jsx","components/EmmaStone.jsx","components/alise/questions.js","components/alise/Alise.jsx","Apple.jsx","index.js"],"names":["ColorModeContext","createContext","toggleColorMode","Theme","children","LSMode","localStorage","mode","config","standartMode","useState","setMode","darkQuery","useMediaQuery","light","ColorLS","colorLight","standartColor","dark","colorDark","color","setColor","right","COLORS","forEach","cl","name","useEffect","ststem","active","system","ColorLSDefiner","useCallback","toggleColorFunc","newColor","prev","toggleColor","theme","useMemo","createTheme","palette","primary","secondary","background","default","grey","myBox","colorMode","Mode","Color","colorDefiner","Provider","value","ThemeProvider","MyBox","propps","Box","sx","m","p","boxShadow","bSh","borderRadius","bgcolor","bg","MyButton","Button","style","textTransform","MyLoadingButton","LoadingButton","MyToggleButton","ToggleButton","AUTH","socket","yellow","Name","blue","green","purple","orange","Text","text","setText","textSettings","setTextSettings","length","justifyContent","boxSizing","display","onClick","JSON","stringify","map","payload","index","Typography","component","className","user","message","variant","Input","end","logged","setMessage","loading","setLoading","socketRef","useRef","current","io","connect","on","scrollIntoView","behavior","disconnect","handleSubmit","e","preventDefault","emit","username","onSubmit","Grid","container","item","xs","TextField","required","label","fullWidth","onChange","target","mt","textAlign","type","UserBox","setLogged","password","login","input","setInput","error","setLabel","a","data","console","log","fetch","method","headers","body","json","res","userError","passwordError","fetchError","token","fetchData","marginLeft","mr","vlaue","Settings","modeChoise","setModeChoise","colorChoise","setColorChoise","ToggleButtonGroup","exclusive","_","choise","size","i","EmmaStone","setSettings","IconButton","to","textDecoration","mainAnswers","mainFunctions","how","blame","questions","question","answer","function","AliseInput","dialogs","setDialogs","setData","mb","dialog","dangerouslySetInnerHTML","__html","replace","j","toLocaleLowerCase","rand","Math","floor","random","setTimeout","Apple","parse","firstText","settings","useTheme","useContext","minHeight","Container","maxWidth","pt","path","element","ref","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80474e2e.chunk.js","sourcesContent":["// eslint-disable-next-line\nimport { useMemo, useState, createContext, useCallback, useEffect } from 'react'\n// eslint-disable-next-line\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\n// eslint-disable-next-line\nimport { grey, yellow, blue, green, purple, orange } from '@mui/material/colors'\nimport { useMediaQuery } from '@mui/material'\n\nimport config from './config'\n\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} })\n\nexport default function Theme({ children }) {\n  // цвет из localStorage\n  const LSMode = localStorage.mode || config.standartMode\n  const [mode, setMode] = useState(LSMode)\n\n  // dark mode из localStorage\n  const darkQuery = useMediaQuery('(prefers-color-scheme: dark)')\n  // цвет primary и secondary для кнопок и всей хуйни\n  const [color, setColor] = useState({\n    light: ColorLS(localStorage.colorLight) || config.standartColor.light,\n    dark: ColorLS(localStorage.colorDark) || config.standartColor.dark,\n  })\n\n  // useEffect при изменении (prefers-color-scheme: dark)\n  useEffect(() => {\n    if (LSMode) {\n      if (LSMode === 'system') {\n        if (darkQuery) {\n          return setMode({ ststem: true, active: 'dark' })\n        } else {\n          return setMode({ ststem: true, active: 'light' })\n        }\n      } else if (LSMode === 'light') {\n        setMode({ system: false, active: 'light' })\n      } else if (LSMode === 'dark') {\n        setMode({ system: false, active: 'dark' })\n      }\n    } else return\n  }, [LSMode, darkQuery])\n\n  // функция ( localStorage.цвет -> цвет )\n  function ColorLS(color) {\n    let right = null\n    config.COLORS.forEach((cl) => {\n      if (color === cl.name) right = cl.color\n    })\n    return right\n  }\n  // функция ( цвет -> localStorage.цвет )\n  const ColorLSDefiner = useCallback((color) => {\n    let right = null\n    config.COLORS.forEach((cl) => {\n      if (color === cl.color) right = cl.name\n    })\n    return right\n  }, [])\n\n  // помогает toggleColor ниже\n  const toggleColorFunc = useCallback(\n    (mode, newColor) => {\n      if (mode === 'light') {\n        setColor((prev) => {\n          localStorage.colorLight = ColorLSDefiner(newColor)\n          return { light: newColor, dark: prev.dark }\n        })\n      } else {\n        setColor((prev) => {\n          localStorage.colorDark = ColorLSDefiner(newColor)\n          return { light: prev.light, dark: newColor }\n        })\n      }\n    },\n    [ColorLSDefiner]\n  )\n  // возвращает { цвет: { light: {}, dark: {} }, цвет: ... }\n  const toggleColor = useCallback(\n    (mode) => {\n      let right = {}\n      config.COLORS.forEach((cl) => {\n        right[cl.name] = () =>\n          toggleColorFunc(mode === 'light' ? 'light' : 'dark', cl.color)\n      })\n      return right\n    },\n    [toggleColorFunc]\n  )\n\n  // сама тема\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: mode.active, // нихуя себе сам додумался до такого\n          ...(mode.active === 'light'\n            ? {\n                // light\n                primary: color.light,\n                secondary: color.light,\n                background: {\n                  default: grey[100],\n                  myBox: 'white',\n                },\n              }\n            : {\n                // dark\n                primary: color.dark,\n                secondary: color.dark,\n                background: {\n                  default: grey[900],\n                  myBox: 'rgb(255, 255, 255, 0.05)',\n                },\n              }),\n        },\n      }),\n    [mode, color]\n  )\n  // useContext функции\n  const colorMode = useMemo(\n    () => ({\n      Mode: {\n        system: () => {\n          localStorage.mode = 'system'\n          setMode({ ...mode, system: true })\n        },\n        light: () => {\n          localStorage.mode = 'light'\n          setMode({ system: false, active: 'light' })\n        },\n        dark: () => {\n          localStorage.mode = 'dark'\n          setMode({ system: false, active: 'dark' })\n        },\n      },\n      Color: {\n        light: toggleColor('light'),\n        dark: toggleColor('dark'),\n        // какой 'цвет' сейчас\n        colorDefiner: ColorLSDefiner(\n          theme.palette.mode === 'light' ? color.light : color.dark\n        ),\n      },\n    }),\n    [toggleColor, ColorLSDefiner, mode, color, theme.palette.mode]\n  )\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ColorModeContext.Provider>\n  )\n}\n","import Box from '@mui/material/Box'\n\nexport default function MyBox(propps) {\n  return (\n    <Box\n      {...propps}\n      sx={{\n        m: 2,\n        p: 2,\n        boxShadow: propps.bSh ? propps.bSh : 5,\n        borderRadius: 3,\n        bgcolor: propps.bg ? propps.bg : 'background.myBox',\n      }}\n    >\n      {propps.children}\n    </Box>\n  )\n}\n","import Button from '@mui/material/Button'\n\nexport default function MyButton(propps) {\n  return (\n    <Button {...propps} style={{ textTransform: 'none' }}>\n      {propps.children}\n    </Button>\n  )\n}\n","import LoadingButton from '@mui/lab/LoadingButton'\n\nexport default function MyLoadingButton(propps) {\n  return (\n    <LoadingButton {...propps} style={{ textTransform: 'none' }}>\n      {propps.children}\n    </LoadingButton>\n  )\n}\n","import ToggleButton from '@mui/material/ToggleButton'\n\nexport default function MyToggleButton(propps) {\n  return (\n    <ToggleButton {...propps} style={{ textTransform: 'none' }}>\n      {propps.children}\n    </ToggleButton>\n  )\n}\n","import Theme from './Theme'\nimport MyBox from './MyBox'\nimport MyButton from './MyButton'\nimport MyLoadingButton from './MyLoadingButton'\nimport MyToggleButton from './MyToggleButton'\nimport { yellow, blue, green, purple, orange } from '@mui/material/colors'\n\nconst config = {\n  // AUTH: 'http://localhost:7000',\n  // socket: 'http://localhost:7000',\n  AUTH: 'https://emmastonenodejs.herokuapp.com',\n  socket: 'https://emmastonenodejs.herokuapp.com',\n\n  // socket: 'https://node7socket.herokuapp.com',\n\n  // Theme\n  COLORS: [\n    { name: 'yellow', color: yellow, Name: 'Yellow' },\n    { name: 'blue', color: blue, Name: 'Blue' },\n    { name: 'green', color: green, Name: 'Green' },\n    { name: 'purple', color: purple, Name: 'Purple' },\n    { name: 'orange', color: orange, Name: 'Orange' },\n  ],\n  standartMode: 'system',\n  standartColor: {\n    light: blue,\n    dark: yellow,\n  },\n}\n\nexport { Theme, MyBox, MyButton, MyLoadingButton, MyToggleButton }\n\nexport default config\n","// eslint-disable-next-line\nimport { useState } from 'react'\nimport '../css/App.css'\n// eslint-disable-next-line\nimport { Grid, Typography } from '@mui/material'\n// eslint-disable-next-line\nimport { MyBox, MyButton } from '../config/config'\n// eslint-disable-next-line\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\n\nexport default function Text({ text, setText }) {\n  const [textSettings, setTextSettings] = useState(false)\n\n  const setTextToLocalStorage = () => {\n    localStorage.text = JSON.stringify(text)\n    setTextSettings(false)\n  }\n  const deleteText = () => {\n    setText([])\n    delete localStorage.text\n  }\n\n  return (\n    <>\n      {text.length ? (\n        <MyBox>\n          <div\n            style={{\n              justifyContent: 'space-between',\n              boxSizing: 'border-box',\n              display: 'flex',\n            }}\n          >\n            <span>\n              {/* <MyButton onClick={() => console.log('жопа')}>\n                <KeyboardArrowUpIcon />\n                <span>more</span>\n              </MyButton> */}\n            </span>\n            <span>\n              {textSettings ? (\n                <>\n                  <MyButton color=\"error\" onClick={deleteText}>\n                    Delete text\n                  </MyButton>\n                  <MyButton onClick={setTextToLocalStorage}>Save text</MyButton>\n                </>\n              ) : null}\n              <MyButton onClick={() => setTextSettings((prev) => !prev)}>\n                •••\n              </MyButton>\n            </span>\n          </div>\n          <div>\n            {text.map((payload, index) => {\n              return (\n                <Typography\n                  component=\"p\"\n                  key={index}\n                  className={`\n                  textLeft\n                  ${payload.user === 'Миша' ? 'textRight' : null} \n                  ${payload.user === 'Emma Stone' ? 'textCenter' : null}\n                `}\n                >\n                  {payload.user !== null &&\n                  payload.user !== 'null' &&\n                  payload.user ? (\n                    <Typography component=\"b\" color=\"primary\">\n                      &nbsp; {payload.user}\n                    </Typography>\n                  ) : null}\n                  &nbsp; {payload.message} &nbsp;\n                </Typography>\n              )\n            })}\n          </div>\n        </MyBox>\n      ) : (\n        <>\n          <Typography variant=\"p\">Ничего тут нету</Typography>\n          <br />\n        </>\n      )}\n    </>\n  )\n}\n","import { useEffect, useState, useCallback, useRef } from 'react'\nimport { Grid, TextField } from '@mui/material'\nimport io from 'socket.io-client'\n\nimport config, { MyBox, MyLoadingButton } from '../config/config'\n\nconst Input = ({ text, setText, end, logged }) => {\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const socketRef = useRef()\n\n  useEffect(() => {\n    socketRef.current = io.connect(config.socket)\n    socketRef.current.on('message', (payload) => {\n      setText([...text, payload])\n      setLoading(false)\n    })\n    end.current.scrollIntoView({ behavior: 'smooth' })\n    return () => socketRef.current.disconnect()\n  }, [text, setText, end])\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault()\n      setLoading(true)\n      socketRef.current.emit('message', {\n        message: message,\n        user: logged ? logged.username : 'Ноунейм',\n      })\n      setMessage('')\n    },\n    [message, logged]\n  )\n\n  return (\n    <MyBox>\n      <form onSubmit={handleSubmit}>\n        <Grid container sx={{ p: 1 }}>\n          <Grid item xs={10}>\n            <TextField\n              required\n              label=\"Вставить сюда\"\n              variant=\"outlined\"\n              value={message}\n              fullWidth\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={2} sx={{ mt: '11px', textAlign: 'end' }}>\n            <MyLoadingButton\n              loading={loading}\n              type=\"submit\"\n              color=\"secondary\"\n              // variant=\"outlined\"\n            >\n              Send\n            </MyLoadingButton>\n          </Grid>\n        </Grid>\n      </form>\n    </MyBox>\n  )\n}\n\nexport default Input\n","import { TextField, Typography } from '@mui/material'\nimport { useState } from 'react'\n\nimport config, { MyBox, MyButton, MyLoadingButton } from '../config/config'\n\nexport default function UserBox({ logged, setLogged }) {\n  const [input, setInput] = useState({\n    password: '',\n    login: '',\n  })\n  const [label, setLabel] = useState({\n    error: { login: false, password: false },\n    login: 'логин Ноунейм',\n    password: 'пароль 1234',\n  })\n  const [loading, setLoading] = useState(false)\n\n  // отправка\n  async function fetchData() {\n    const data = {\n      username: input.login,\n      password: input.password,\n    }\n    console.log('Отправляю:', data)\n    const res = await (\n      await fetch(`${config.AUTH}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify(data),\n      })\n    ).json()\n    console.log('Пришло:', res)\n    if (res.username && !res.userError && !res.passwordError) {\n      localStorage.username = res.username\n      localStorage.token = res.token\n      console.log('Все збс', localStorage)\n      setLogged({ username: res.username })\n    } else fetchError(res)\n  }\n  // при ошибке\n  function fetchError(res) {\n    if (res.userError) {\n      setLabel({\n        error: { login: true, password: true },\n        login: res.userError,\n        password: 'и пароль твой говно',\n      })\n    } else if (res.passwordError) {\n      setLabel({\n        error: { login: false, password: true },\n        login: 'ты тупой, ',\n        password: res.passwordError,\n      })\n    }\n    setLoading(false)\n  }\n  // выход\n  function handleLogOut() {\n    delete localStorage.username\n    delete localStorage.token\n    console.log(localStorage)\n    setLoading(false)\n    setLogged(false)\n    setInput({ login: '', password: '' })\n    setLabel({\n      error: { login: false, password: false },\n      login: 'логин Ноунейм',\n      password: 'пароль 1234',\n    })\n  }\n\n  // жопа\n  function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    fetchData()\n    setInput((prev) => {\n      return { login: prev.login, password: '' }\n    })\n  }\n\n  return (\n    <MyBox>\n      {!logged ? (\n        <>\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <Typography variant=\"label\" sx={{ mr: '25px' }}>\n              Эй ю ты кто? а\n            </Typography>\n            <MyLoadingButton\n              loading={loading}\n              type=\"submit\"\n              color=\"secondary\"\n              variant=\"outlined\"\n            >\n              Вoйти\n            </MyLoadingButton>\n            <br />\n            <br />\n            <TextField\n              required\n              fullWidth\n              type=\"username\"\n              error={label.error.login}\n              label={label.login}\n              vlaue={input.login}\n              onChange={(e) =>\n                setInput((prev) => {\n                  return { login: e.target.value, password: prev.password }\n                })\n              }\n            />\n            <br />\n            <br />\n            <TextField\n              required\n              fullWidth\n              type=\"password\"\n              error={label.error.password}\n              label={label.password}\n              value={input.password}\n              onChange={(e) =>\n                setInput((prev) => {\n                  return { login: prev.login, password: e.target.value }\n                })\n              }\n            />\n          </form>\n        </>\n      ) : (\n        <div style={{ textAlign: 'end' }}>\n          <Typography variant=\"label\">\n            {input.login !== '' ? input.login : localStorage.username} &nbsp;\n            &nbsp;\n          </Typography>\n          <MyButton\n            style={{ marginLeft: 10 }}\n            color=\"secondary\"\n            variant=\"text\"\n            onClick={handleLogOut}\n          >\n            Выйти\n          </MyButton>\n        </div>\n      )}\n    </MyBox>\n  )\n}\n","import '../css/App.css'\n// eslint-disable-next-line\nimport { useEffect, useState } from 'react'\n// eslint-disable-next-line\nimport { FormControlLabel, Switch, Button } from '@mui/material'\n// eslint-disable-next-line\nimport { ToggleButtonGroup } from '@mui/material'\n// eslint-disable-next-line\nimport config, { MyButton, MyBox, MyToggleButton } from '../config/config'\n// eslint-disable-next-line\nimport Brightness4Icon from '@mui/icons-material/Brightness4'\n// eslint-disable-next-line\nimport DarkModeIcon from '@mui/icons-material/DarkMode'\n// eslint-disable-next-line\nimport LightModeIcon from '@mui/icons-material/LightMode'\n\nexport default function Settings({ theme, colorMode }) {\n  // все для mode\n  const [modeChoise, setModeChoise] = useState(() => {\n    if (localStorage.mode === 'system') return 'system'\n    if (localStorage.mode === 'light') return 'light'\n    if (localStorage.mode === 'dark') return 'dark'\n    else return config.standartMode\n  })\n  const handleModeChoise = (_, choise) => {\n    if (choise === 'system') {\n      colorMode.Mode.system()\n      setModeChoise(choise)\n    } else if (choise === 'light') {\n      colorMode.Mode.light()\n      setModeChoise(choise)\n    } else if (choise === 'dark') {\n      colorMode.Mode.dark()\n      setModeChoise(choise)\n    }\n  }\n\n  // все для color\n  const [colorChoise, setColorChoise] = useState()\n  const handleColorChoise = (_, choise) => {\n    try {\n      if (modeChoise === 'system') {\n        if (theme.palette.mode === 'light') {\n          colorMode.Color.light[choise]()\n          setColorChoise(choise)\n        } else {\n          colorMode.Color.dark[choise]()\n          setColorChoise(choise)\n        }\n      } else if (modeChoise === 'light') {\n        colorMode.Color.light[choise]()\n        setColorChoise(choise)\n      } else if (modeChoise === 'dark') {\n        colorMode.Color.dark[choise]()\n        setColorChoise(choise)\n      }\n    } catch {\n      return\n    }\n  }\n  // будет менять цвет colorChoise при изменении темы\n  useEffect(() => {\n    if (theme.palette.mode === 'light') {\n      setColorChoise(colorMode.Color.colorDefiner)\n    } else {\n      setColorChoise(colorMode.Color.colorDefiner)\n    }\n    return colorMode.Color.colorDefiner\n  }, [colorMode.Color, theme.palette.mode])\n\n  return (\n    <MyBox>\n      <ToggleButtonGroup\n        color=\"primary\"\n        exclusive\n        value={modeChoise}\n        onChange={handleModeChoise}\n      >\n        <MyToggleButton value=\"system\">\n          System &nbsp;\n          <Brightness4Icon />\n        </MyToggleButton>\n        <MyToggleButton value=\"light\">\n          <LightModeIcon />\n        </MyToggleButton>\n        <MyToggleButton value=\"dark\">\n          <DarkModeIcon />\n        </MyToggleButton>\n      </ToggleButtonGroup>\n\n      <br />\n      <br />\n\n      <ToggleButtonGroup\n        size=\"small\"\n        color=\"primary\"\n        exclusive\n        value={colorChoise}\n        onChange={handleColorChoise}\n      >\n        {config.COLORS.map((cl, i) => {\n          return (\n            <MyToggleButton value={cl.name} key={i}>\n              {cl.Name}\n            </MyToggleButton>\n          )\n        })}\n      </ToggleButtonGroup>\n    </MyBox>\n  )\n}\n","// eslint-disable-next-line\nimport React from 'react'\n// eslint-disable-next-line\nimport { IconButton, Typography } from '@mui/material'\n// eslint-disable-next-line\nimport { MyBox, MyButton } from '../config/config'\n// eslint-disable-next-line\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport { Link } from 'react-router-dom'\n\nexport default function EmmaStone({ setSettings }) {\n  return (\n    <MyBox bSh={'0px'} bg={'#fff0'}>\n      <Typography component=\"span\" variant=\"h4\">\n        Emma Stone &nbsp;\n        <IconButton\n          color=\"primary\"\n          onClick={() => setSettings((prev) => !prev)}\n        >\n          <SettingsIcon />\n        </IconButton>\n      </Typography>\n      &nbsp;&nbsp;&nbsp;\n      <span>\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n          <Typography component=\"span\" color=\"primary\">\n            Socket\n          </Typography>\n        </Link>\n        &nbsp; &nbsp;\n        <Link to=\"/alise\" style={{ textDecoration: 'none' }}>\n          <Typography component=\"span\" color=\"primary\">\n            Alise\n          </Typography>\n        </Link>\n      </span>\n    </MyBox>\n  )\n}\n","// prettier-ignore\nconst mainAnswers = {\n  blame: [ 'сам такой', 'я обиделася', 'я обиделась', 'бе((', 'мэ(', 'кто обзывается - тот сам так называется, сучара', 'соси писос', 'обидно', 'неприятно', 'от тебя воняет' ],\n  swear: ['сучара', 'сука', 'пидор', 'еблан тупой', 'сучка', 'еблан'],\n  yell: [ 'уууууууу', 'ууууу', 'АААААААА', 'аааа', 'оооооооо', 'оаоаоаоаоао', 'ыыыыыыыыыыыыы', 'ъуъуъуъуъуъуъуъуъ' ],\n}\n// prettier-ignore\nconst mainFunctions = {\n  setBlame: (data, how) => {\n    if (how) data.blame = true\n    else data.blame = false\n    return data\n  },\n}\n// prettier-ignore\nconst questions = [\n  {\n    question: [\n      'хайушки', 'привет', 'приветики', 'приветули', 'хай', 'добрый день', 'добрый вечер', 'доброе утро'\n    ],\n    answer: ['Привет, еблан', 'Прив че дел', 'Здарова, отец', 'Oh shit, here we go again'],\n  },\n  {\n    question: ['извини', 'прости', 'сори', 'прости меня', 'извини меня'],\n    answer: [\n      'ладно, прощаю', 'хорошо, больше так не делай', 'на этот раз прощаю', 'ладно', 'ну ладно'\n    ],\n    function: (data) => {\n      mainFunctions.setBlame(data, false)\n      return data\n    },\n  },\n  {\n    question: ['алиса'],\n    answer: ['Че тебе надо блятб', 'че?', 'че надо?', 'че тебе?', 'а?', 'да?'],\n  },\n  { \n    question: ['ты кто', 'кто ты', 'что ты такое'], \n    answer: ['Я Алиса', 'Я кибОрг убийца', 'Я мусулман'] \n  },\n  {\n    question: ['как дела', 'че как'],\n    answer: [\n      'Норм', 'Ещё не родила ъаъъаъаъа', 'Хорошо, только жопа отвалилась','Хорошо, а у тебя?'\n    ],\n  },\n  {\n    question: ['жопа'],\n    answer: [...mainAnswers.blame, 'Это ты жопа!', 'Сам жопа', 'Ну и иди в нее'],\n  },\n  {\n    question: ['попа'],\n    answer: [...mainAnswers.blame, 'Сам ты попа', 'Сам попа', 'Ну и иди в нее'],\n  },\n  {\n    question: ['говно'],\n    answer: [...mainAnswers.blame, 'Сам ты говно', 'Сам говно'],\n  },\n  {\n    question: ['я хочу кушать', 'хочу есть', 'жрать хочу', 'хочу жрать'],\n    answer: ['хорошо, пошли в мак', 'Иди поешь'],\n  },\n  { \n    question: ['симпл димпл'], \n    answer: ['Нет, Поп Ит!'] \n  },\n  { \n    question: [\n     'у', 'уу', 'ууу', 'уууу', 'ууууу', 'уууууу', 'ууууууу', 'уууууууу', 'ууууууууу'\n    ], \n    answer: [...mainAnswers.yell] \n  },\n  { \n    question: ['пук', 'пук пук'], \n    answer: ['пук', 'пук пук', 'я человек паук'] \n  },\n  {\n    question: ['ты говно', 'ты лох', 'ты чмо'],\n    answer: [...mainAnswers.blame],\n    function: (data) => {\n      mainFunctions.setBlame(data, true)\n      return data\n    },\n  },\n  { \n    question: ['ты тупая', 'ты глупая'], \n    answer: [...mainAnswers.blame, 'нет ты(', 'это ты тупая!'],\n    function: (data) => {\n      mainFunctions.setBlame(data, true)\n      return data\n    },\n  },\n  { \n    question: ['что ты умеешь', 'что ты можешь'], \n    answer: ['Я умею нихуя, я тупая)'] \n  },\n  { \n    question: ['что ты делаешь', 'что делаешь', 'че делаешь'], \n    answer: ['Да ниче', 'Как всегда бездельничаю', 'туплю в окно', 'Ничего', 'Нихуя'] \n  },\n  {\n    question: ['расскажи шутку', 'пошути'],\n    answer: [\n      'Не буду говорить какое место в моей жизни занимает алкоголь, но скажу что серебро и бронза по-бокам'\n    ],\n  },\n  {\n    question: ['спой песню', 'хочу песню', 'песня', 'песенка', 'спой'],\n    answer: [\n      '\\nЭй, цепь на мне, \\nсыпь лавэ \\nСотка тыщ на Bag LV \\nСотни сук хотят ко мне \\nСотни сук хотят камней \\n\\nКак дела? \\nКак дела? \\nЭто новый Cadillac \\nДелать деньги, \\nделать деньги \\nДелать деньги, бля*ь, вот так \\n(с) Моргенштерн',\n      '\\nЯ лью Cristal и Chandon Moët \\nМечтал — теперь моё \\nТрачу на это, трачу на то, \\nтрачу на это, трачу на то \\nЯ лью Cristal и Chandon Moët \\nМечтал — теперь моё \\nТрачу на это, трачу на то, \\nтрачу на это, трачу на то \\n(c) Моргенштерн',\n    ],\n  },\n  { \n    question: ['молодец', 'ты хорошая', 'ты классная', 'ты класссная', ''], \n    answer: ['Я старалась', 'Спасибо, мне приятно', 'ооооооууу', ''] \n  },\n  { \n    question: [...mainAnswers.swear, 'пошла в жопу', 'да пошла ты', 'иди в жопу', 'пошла нахуй', 'иди нахуй', 'нахуй иди', 'пошла ты', ''], \n    answer: [...mainAnswers.swear, ...mainAnswers.blame],\n    function: (data) => {\n      mainFunctions.setBlame(data, true)\n      return data\n    },\n  },\n  {\n    question: ['спасибо', 'спс'],\n    answer: ['Пожалуйста)', 'Незашто', 'Спасибо в корман не положишь'],\n  },\n  {\n    question: ['дура'],\n    answer: [...mainAnswers.blame, 'сам ты дура', 'нет ты дура', 'Дора?', ''],\n    function: (data) => {\n      mainFunctions.setBlame(data, true)\n      return data\n    },\n  },\n  { \n    question: ['кто я', 'кто я такой'], \n    answer: ['кто-то', 'ты лох', 'чма'] \n  },\n  {\n    question: ['хорошо', 'ладно', 'ок'],\n    answer: ['дада', 'угу', 'договорились', 'вставить текст', 'не знаю что ответить'],\n  },\n  { \n    question: ['по пивку'], \n    answer: ['по пивку'], \n    function: (data) => {\n      mainFunctions.setBlame(data, false)\n      return data\n    },\n  },\n]\n\nexport default questions\n","import { useState } from 'react'\nimport { Grid, TextField, Typography } from '@mui/material'\nimport { MyBox, MyLoadingButton } from '../../config/config'\n\nimport questions from './questions'\n\nexport default function AliseInput({ end, logged }) {\n  const [input, setInput] = useState('')\n  const [dialogs, setDialogs] = useState([\n    { text: 'Привет, чем я могу помочь?', user: 'Алиса' },\n  ])\n  const [data, setData] = useState({\n    blame: false,\n  })\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    setDialogs((prev) => [\n      ...prev,\n      {\n        text: input,\n        user: logged ? logged.username : 'Ноунейм',\n        right: true,\n      },\n    ])\n    let answer = null\n    questions.forEach((i) => {\n      i.question.forEach((j) => {\n        if (j === input.toLocaleLowerCase()) {\n          if (i.function) setData(i.function(data))\n          console.log(data)\n          const rand = Math.floor(Math.random() * i.answer.length)\n          return (answer = i.answer[rand])\n        }\n      })\n    })\n    setTimeout(() => {\n      setDialogs((prev) => [\n        ...prev,\n        {\n          text: answer || 'Не поняла',\n          user: 'Алиса',\n        },\n      ])\n    }, [200])\n    setInput('')\n    setTimeout(() => {\n      end.current.scrollIntoView({ behavior: 'smooth' })\n    }, [250])\n  }\n\n  return (\n    <>\n      <MyBox bg={data.blame ? '#d60000' : null}>\n        <Typography\n          variant=\"h4\"\n          color={data.blame ? '' : 'primary'}\n          sx={{ mb: '10px' }}\n        >\n          Алиса\n        </Typography>\n        {dialogs.map((dialog, index) => {\n          return (\n            <div\n              key={index}\n              style={{ textAlign: dialog.right ? 'end' : 'start' }}\n            >\n              <Typography variant=\"p\">\n                <Typography variant=\"span\" color=\"primary\">\n                  {dialog.user}\n                </Typography>\n                &nbsp;\n                <Typography\n                  variant=\"span\"\n                  dangerouslySetInnerHTML={{\n                    __html: dialog.text.replace(/\\n/g, '<br />&nbsp; &nbsp;'),\n                  }}\n                />\n              </Typography>\n            </div>\n          )\n        })}\n      </MyBox>\n      <MyBox bg={data.blame ? '#d60000' : null}>\n        <form onSubmit={handleSubmit}>\n          <Grid container sx={{ p: 1 }}>\n            <Grid item xs={10}>\n              <TextField\n                required\n                fullWidth\n                label=\"Вставить сюда\"\n                variant=\"outlined\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={2} sx={{ mt: '11px', textAlign: 'end' }}>\n              <MyLoadingButton color=\"secondary\" type=\"submit\">\n                Send\n              </MyLoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </MyBox>\n    </>\n  )\n}\n","// eslint-disable-next-line\nimport { useState, useContext, useRef } from 'react'\n// eslint-disable-next-line\nimport { Container, Box } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\n// eslint-disable-next-line\nimport Text from './components/Text'\nimport Input from './components/Input'\nimport UserBox from './components/UserBox'\nimport Settings from './components/Settings'\nimport EmmaStone from './components/EmmaStone'\nimport { ColorModeContext } from './config/Theme'\n// eslint-disable-next-line\nimport { MyButton } from './config/config'\n// eslint-disable-next-line\nimport { Route, Routes } from 'react-router-dom'\nimport Alise from './components/alise/Alise'\n\nexport default function Apple() {\n  const firstText = () => {\n    try {\n      return JSON.parse(localStorage.text)\n    } catch {\n      return []\n    }\n  }\n  const [text, setText] = useState(firstText() || [])\n  const [logged, setLogged] = useState(() => {\n    return localStorage.username &&\n      localStorage.username !== null &&\n      localStorage.username !== 'null'\n      ? { username: localStorage.username }\n      : false\n  })\n\n  const [settings, setSettings] = useState(false)\n  const theme = useTheme()\n  const colorMode = useContext(ColorModeContext)\n\n  const end = useRef()\n  const sxBox = {\n    bgcolor: 'background.default',\n    color: 'text.primary',\n    minHeight: '100vh',\n  }\n\n  return (\n    <Box sx={sxBox}>\n      <Container className=\"App\" maxWidth=\"sm\" sx={{ pt: 5 }}>\n        <EmmaStone setSettings={setSettings} />\n        {settings ? <Settings theme={theme} colorMode={colorMode} /> : null}\n        <UserBox\n          logged={logged}\n          setLogged={setLogged}\n          text={text}\n          setText={setText}\n        />\n        <Routes>\n          <Route\n            path=\"*\"\n            element={\n              <>\n                {/* {logged ? <Text text={text} setText={setText} /> : null}\n                  {logged ? (\n                    <Input text={text} setText={setText} end={end} />\n                  ) : null} */}\n                <Text text={text} setText={setText} />\n                <Input\n                  text={text}\n                  setText={setText}\n                  end={end}\n                  logged={logged}\n                />\n              </>\n            }\n          />\n          <Route path=\"/alise\" element={<Alise end={end} logged={logged} />} />\n        </Routes>\n      </Container>\n      <br ref={end} />\n    </Box>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\n\nimport Apple from './Apple.jsx'\nimport Theme from './config/Theme'\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <Theme>\n    <HashRouter>\n      <Apple />\n    </HashRouter>\n  </Theme>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}